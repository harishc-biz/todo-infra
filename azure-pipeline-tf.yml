trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  displayName: 'terraform init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    commandOptions: '-var-file ./environments/dev/terraform.tfvars'
    backendAzureRmUseEnvironmentVariablesForAuthentication: false
    backendServiceArm: 'harish(7988383d-5947-4e42-bede-64c7eb8aa983)'
    backendAzureRmResourceGroupName: 'todo-app'
    backendAzureRmStorageAccountName: 'tododevtf'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'


- task: TerraformTaskV4@4
  displayName: 'terraform plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    commandOptions: '-var-file environments/dev/terraform.tfvars -out=output/plan-$(Build.BuildId)'
    environmentServiceNameAzureRM: 'harish(7988383d-5947-4e42-bede-64c7eb8aa983)'


- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/terraform/output'
    ArtifactName: 'tf-plan'
    publishLocation: 'Container'